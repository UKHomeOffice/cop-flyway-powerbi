workspace:
  base: /mnt
  path: /

pipeline:
  synch_production_secrets:
    image: quay.io/ukhomeofficedigital/cop-secrets
    environment:
      - DRONE_SERVER=https://drone.acp.homeoffice.gov.uk
      - DEPLOY_ENV=production
    secrets:
      - source: PRODUCTION_DRONE_AWS_ACCESS_KEY_ID
        target: AWS_ACCESS_KEY_ID
      - source: PRODUCTION_DRONE_AWS_SECRET_ACCESS_KEY
        target: AWS_SECRET_ACCESS_KEY
      - source: DRONE_PUBLIC_TOKEN
        target: DRONE_TOKEN
    when:
      environment: secrets
      event: deployment

#  validate_schema:
#    image: python:3.6.1-alpine
#    environment:
#      - WORKDIR=/mnt/schemas/reference
#    commands:
#      - /mnt/docker/validateSchema.sh
#    when:
#      branch:
#        exclude: master
#      event: push

  deploy_to_prod:
    image: quay.io/ukhomeofficedigital/docker-flyway:9b4c62ed90c599a9bc3282ef06b58818b24762f9
    secrets:
      - source: DB_POWERBI_DEFAULT_USERNAME
        target: DB_POWERBI_DEFAULT_USERNAME
      - source: DB_POWERBI_GOVERNANCE_ANON_USERNAME
        target: DB_POWERBI_GOVERNANCE_ANON_USERNAME
      - source: DB_POWERBI_GOVERNANCE_AUTHENTICATOR_USERNAME
        target: DB_POWERBI_GOVERNANCE_AUTHENTICATOR_USERNAME
      - source: DB_POWERBI_GOVERNANCE_OWNER_USERNAME
        target: DB_POWERBI_GOVERNANCE_OWNER_USERNAME
      - source: DB_POWERBI_GOVERNANCE_READONLY_USERNAME
        target: DB_POWERBI_GOVERNANCE_READONLY_USERNAME
      - source: DB_POWERBI_GOVERNANCE_SCHEMA
        target: DB_POWERBI_GOVERNANCE_SCHEMA
      - source: DB_POWERBI_GOVERNANCE_SERVICE_USERNAME
        target: DB_POWERBI_GOVERNANCE_SERVICE_USERNAME
      - source: DB_POWERBI_JDBC_OPTIONS
        target: DB_POWERBI_JDBC_OPTIONS
      - source: DB_POWERBI_OPTIONS
        target: DB_POWERBI_OPTIONS
      - source: DB_POWERBI_PORT
        target: DB_POWERBI_PORT
      - source: DB_POWERBI_PRIVATE_GITKEY
        target: DB_POWERBI_PRIVATE_GITKEY
      - source: DB_POWERBI_PRIVATE_GITREPO
        target: DB_POWERBI_PRIVATE_GITREPO
      - source: PROTOCOL_POSTGRES
        target: DB_POWERBI_PROTOCOL
      - source: DB_POWERBI_REFERENCE_ANON_USERNAME
        target: DB_POWERBI_REFERENCE_ANON_USERNAME
      - source: DB_POWERBI_REFERENCE_AUTHENTICATOR_USERNAME
        target: DB_POWERBI_REFERENCE_AUTHENTICATOR_USERNAME
      - source: DB_POWERBI_REFERENCE_DBNAME
        target: DB_POWERBI_REFERENCE_DBNAME
      - source: DB_POWERBI_REFERENCE_OWNER_USERNAME
        target: DB_POWERBI_REFERENCE_OWNER_USERNAME
      - source: DB_POWERBI_REFERENCE_READONLY_USERNAME
        target: DB_POWERBI_REFERENCE_READONLY_USERNAME
      - source: DB_POWERBI_REFERENCE_SCHEMA
        target: DB_POWERBI_REFERENCE_SCHEMA
      - source: DB_POWERBI_REFERENCE_SERVICE_USERNAME
        target: DB_POWERBI_REFERENCE_SERVICE_USERNAME
      - source: PRODUCTION_DB_POWERBI_DEFAULT_DBNAME
        target: DB_POWERBI_DEFAULT_DBNAME
      - source: PRODUCTION_DB_POWERBI_DEFAULT_PASSWORD
        target: DB_POWERBI_DEFAULT_PASSWORD
      - source: PRODUCTION_DB_POWERBI_GOVERNANCE_AUTHENTICATOR_PASSWORD
        target: DB_POWERBI_GOVERNANCE_AUTHENTICATOR_PASSWORD
      - source: PRODUCTION_DB_POWERBI_GOVERNANCE_OWNER_PASSWORD
        target: DB_POWERBI_GOVERNANCE_OWNER_PASSWORD
      - source: PRODUCTION_DB_POWERBI_HOSTNAME
        target: DB_POWERBI_HOSTNAME
      - source: PRODUCTION_DB_POWERBI_REFERENCE_AUTHENTICATOR_PASSWORD
        target: DB_POWERBI_REFERENCE_AUTHENTICATOR_PASSWORD
      - source: PRODUCTION_DB_POWERBI_REFERENCE_OWNER_PASSWORD
        target: DB_POWERBI_REFERENCE_OWNER_PASSWORD
      - source: GIT_REPO_PRIVATE_GITURL
        target: GIT_REPO_PRIVATE_GITURL
      - source: GIT_REPO_PRIVATE_PORT
        target: GIT_REPO_PRIVATE_PORT
      - source: GIT_REPO_PRIVATE_URL
        target: GIT_REPO_PRIVATE_URL
    commands:
      - export PRIVATE_KEY=$${DB_POWERBI_PRIVATE_GITKEY}
      - export PRIVATE_GIT_URL="$${GIT_REPO_PRIVATE_GITURL}$${DB_POWERBI_PRIVATE_GITREPO}.git"
      - /usr/bin/create_ssh_key.sh
      - /usr/bin/ssh-keyscan -T 10 -p $${GIT_REPO_PRIVATE_PORT} $${GIT_REPO_PRIVATE_URL}  >> ~/.ssh/known_hosts
      - git clone $${PRIVATE_GIT_URL} private-refdata
      - /mnt/docker/reset.sh
      - /mnt/docker/run.sh
      - cd /mnt/private-refdata
      - /mnt/private-refdata/docker/run.sh
    when:
      branch: master
      event: deployment
      environment: production

  notify:
    image: plugins/slack
    secrets: [ SLACK_WEBHOOK ]
    channel: cop-deployments
    username: Drone Build Watcher
    template: >
      {{#build.deployTo}}
        *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*
        {{build.link}}
      {{else}}
        *{{repo.name}} - Build {{build.number}} - Development - {{uppercase build.status}}*
        {{build.link}}
      {{/build.deployTo}}
    when:
      branch: master
      event: [ push, deployment ]
      status: [ success, failure ]
